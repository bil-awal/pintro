services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pintro_postgres
    environment:
      POSTGRES_DB: pintro_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_MULTIPLE_DATABASES: transaction_db,transaction_web_db
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
      - ./transaction-service/migrations:/docker-entrypoint-initdb.d/migrations:ro
    networks:
      - pintro_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pintro_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pintro_redis
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pintro_network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # Go Transaction Service with Swagger
  go-transaction-service:
    build:
      context: ./transaction-service
      dockerfile: Dockerfile
      args:
        - BUILD_ENV=production
    container_name: pintro_go_service
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Application Configuration
      - APP_NAME=Pintro Transaction Service
      - APP_VERSION=1.0.0
      - APP_HOST=0.0.0.0
      - APP_PORT=8080
      - APP_ENV=production
      - DEBUG=false
      
      # Database Configuration
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=password123
      - DB_DATABASE=transaction_db
      - DB_SSL_MODE=disable
      - DB_MAX_OPEN_CONNS=25
      - DB_MAX_IDLE_CONNS=5
      
      # JWT Configuration (Use strong secret in production!)
      - JWT_SECRET_KEY=8c100781e252cc0a9c588ea6bcbd60d750b13b42957276415895b028d24427e3
      - JWT_EXPIRE_HOURS=24
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      
      # Midtrans Payment Gateway
      - MIDTRANS_SERVER_KEY=your-midtrans-server-key
      - MIDTRANS_CLIENT_KEY=your-midtrans-client-key
      - MIDTRANS_ENV=sandbox
      
      # Swagger Configuration
      - SWAGGER_HOST=localhost:8080
      - SWAGGER_SCHEMES=http,https
      - SWAGGER_BASE_PATH=/api/v1
      
      # Logging Configuration
      - LOG_LEVEL=info
      - LOG_FORMAT=json
      
      # Security Configuration
      - RATE_LIMIT_RPS=20
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:80
      
    ports:
      - "8080:8080"
    networks:
      - pintro_network
    volumes:
      - ./transaction-service/logs:/app/logs
      - ./transaction-service/migrations:/app/migrations:ro
      - ./transaction-service/docs:/app/docs:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.go-api.rule=Host(`api.localhost`) || PathPrefix(`/api/`)"
      - "traefik.http.routers.go-api.service=go-transaction-service"
      - "traefik.http.services.go-transaction-service.loadbalancer.server.port=8080"

  # Laravel Web Application  
  laravel-web:
    build:
      context: ./transaction-web
      dockerfile: Dockerfile
      args:
        - BUILD_ENV=production
    container_name: pintro_laravel_web
    depends_on:
      postgres:
        condition: service_healthy
      go-transaction-service:
        condition: service_healthy
    environment:
      # Laravel Configuration
      - APP_NAME="Pintro Transaction Web"
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=http://localhost
      - APP_PORT=8000
      
      # Prevent HTTPS redirect configurations
      - FORCE_HTTPS=false
      - APP_FORCE_HTTPS=false
      - HTTPS_ONLY=false
      - SSL_REDIRECT=false
      - SECURE_COOKIES=false
      - SESSION_SECURE_COOKIE=false
      
      # Database Configuration
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=transaction_web_db
      - DB_USERNAME=postgres
      - DB_PASSWORD=password123
      
      # Cache & Session Configuration
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=redis
      - REDIS_PASSWORD=
      - REDIS_PORT=6379
      
      # Go Service Integration
      - GO_TRANSACTION_SERVICE_URL=http://go-transaction-service:8080
      - GO_TRANSACTION_API_KEY=8c100781e252cc0a9c588ea6bcbd60d750b13b42957276415895b028d24427e3
      - GO_TRANSACTION_TIMEOUT=30
      
      # Mail Configuration (Optional)
      - MAIL_MAILER=log
      - MAIL_HOST=smtp.mailtrap.io
      - MAIL_PORT=2525
      - MAIL_USERNAME=
      - MAIL_PASSWORD=
      
      # Trust proxy headers for HTTP
      - TRUSTED_PROXIES=*
      - TRUSTED_HOSTS=localhost,127.0.0.1
      
    ports:
      - "8000:8000"
    networks:
      - pintro_network
    volumes:
      - ./transaction-web/storage/app:/var/www/html/storage/app
      - ./transaction-web/storage/logs:/var/www/html/storage/logs
      - ./transaction-web/storage/framework:/var/www/html/storage/framework
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.laravel-web.rule=Host(`localhost`)"
      - "traefik.http.routers.laravel-web.service=laravel-web"
      - "traefik.http.services.laravel-web.loadbalancer.server.port=8000"

  # Nginx Reverse Proxy - Local Development (HTTP Only)
  nginx:
    image: nginx:alpine
    container_name: pintro_nginx
    depends_on:
      - laravel-web
      - go-transaction-service
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    networks:
      - pintro_network
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/nginx-health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Database Administration Tool
  adminer:
    image: adminer:latest
    container_name: pintro_adminer
    depends_on:
      - postgres
    ports:
      - "8081:8080"
    networks:
      - pintro_network
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=pepa-linha
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  pintro_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16